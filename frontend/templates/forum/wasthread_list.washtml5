{% extends "base.html" %}
{% block title %}{% if is_wiki %}Wiki Pages{% else %}Forum{% endif %}{% endblock %}

{% block content %}
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>{% if is_wiki %}Wiki Pages{% else %}Forum{% endif %}</h1>
        {% if session.get('user') %}
            <a href="{{ url_for('forum.new_thread', is_wiki=1 if is_wiki else 0) }}" class="btn btn-primary">
                {% if is_wiki %}New Wiki Page{% else %}New Thread{% endif %}
            </a>
        {% endif %}
    </div>

    <!-- Filter Controls -->
    <div class="card mb-4">
        <div class="card-body">
            <form method="GET" id="filterForm" class="row g-3">
                <input type="hidden" name="is_wiki" value="{{ '1' if is_wiki else '0' }}">
                
                <div class="col-md-5">
                    <label for="groupFilter" class="form-label">Group</label>
                    <select id="groupFilter" name="group_id" class="form-select">
                        <option value="">All Groups</option>
                        {% for group in groups %}
                            <option value="{{ group.id }}" {% if selected_group == group.id %}selected{% endif %}>
                                {{ group.grouptext }}
                            </option>
                        {% endfor %}
                    </select>
                </div>
                
                <div class="col-md-5">
                    <label for="categoryFilter" class="form-label">Category</label>
                    <select id="categoryFilter" name="category_id" class="form-select" {% if not selected_group %}disabled{% endif %}>
                        <option value="">All Categories</option>
                        {% for category in categories %}
                            <option value="{{ category.id }}" {% if selected_category == category.id %}selected{% endif %}>
                                {{ category.category }}
                            </option>
                        {% endfor %}
                    </select>
                </div>
                
                <div class="col-md-2 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary w-100">Apply Filters</button>
                </div>
            </form>
        </div>
    </div>

    <div class="thread-list" tabindex="0">
        {% for thread in threads %}
            <div class="thread-item card mb-3" data-thread-id="{{ thread.id }}">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <p class="card-subtitle mb-1">
                                Started by {{ thread.username }} on {{ thread.created_at | datetime }}
                                {% if thread.last_post_at != thread.created_at %}
                                <span class="text-muted mx-2">â€¢</span> Last post: {{ thread.last_post_at | datetime }}
                                {% endif %}
                                {% if thread.group_name and thread.category_name %}
                                <span class="badge bg-primary ms-2">{{ thread.group_name }}</span>
                                <span class="badge bg-secondary">{{ thread.category_name }}</span>
                                {% endif %}
                            </p>
                            <h5 class="card-title mb-1">
                                <a href="{{ url_for('forum.view_thread', thread_id=thread.id) }}" class="text-decoration-none">
                                    {{ thread.title }}
                                </a>
                            </h5>
                        </div>
                        <small class="text-muted">{{ thread.post_count }} posts</small>
                    </div>
                </div>
            </div>
        {% else %}
            <div class="alert alert-info">
                {% if selected_group or selected_category %}
                    No {% if is_wiki %}pages{% else %}threads{% endif %} found matching your filters.
                {% else %}
                    No {% if is_wiki %}pages{% else %}threads{% endif %} yet.
                {% endif %}
            </div>
        {% endfor %}
    </div>

    {% if page > 1 or threads | length == Config.THREADS_PER_PAGE %}
        <nav aria-label="Thread navigation">
            <ul class="pagination justify-content-center">
                {% if page > 1 %}
                    <li class="page-item">
                        <a class="page-link" 
                           href="{{ url_for('forum.view_threads', page=page-1, group_id=selected_group, category_id=selected_category, is_wiki=1 if is_wiki else 0) }}">
                            Previous
                        </a>
                    </li>
                {% endif %}
                {% if threads | length == Config.THREADS_PER_PAGE %}
                    <li class="page-item">
                        <a class="page-link" 
                           href="{{ url_for('forum.view_threads', page=page+1, group_id=selected_group, category_id=selected_category, is_wiki=1 if is_wiki else 0) }}">
                            Next
                        </a>
                    </li>
                {% endif %}
            </ul>
        </nav>
    {% endif %}
{% endblock %}

{% block scripts %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Handling for keyboard navigation in thread list
    const threadList = document.querySelector('.thread-list');
    let selectedIndex = -1;
    
    function updateSelection() {
        const items = document.querySelectorAll('.thread-item');
        items.forEach((item, index) => {
            if (index === selectedIndex) {
                item.classList.add('selected');
                item.scrollIntoView({ block: 'nearest' });
            } else {
                item.classList.remove('selected');
            }
        });
    }
    
    if (threadList) {
        threadList.addEventListener('keydown', function(e) {
            const items = document.querySelectorAll('.thread-item');
            
            switch(e.key) {
                case 'ArrowDown':
                    e.preventDefault();
                    selectedIndex = Math.min(selectedIndex + 1, items.length - 1);
                    updateSelection();
                    break;
                    
                case 'ArrowUp':
                    e.preventDefault();
                    selectedIndex = Math.max(0, selectedIndex - 1);
                    updateSelection();
                    break;
                    
                case 'Enter':
                    e.preventDefault();
                    if (selectedIndex >= 0) {
                        const link = items[selectedIndex].querySelector('a');
                        if (link) link.click();
                    }
                    break;
            }
        });
    }
    
    // Dynamic category loading when group changes
    const groupFilter = document.getElementById('groupFilter');
    const categoryFilter = document.getElementById('categoryFilter');
    
    if (groupFilter && categoryFilter) {
        groupFilter.addEventListener('change', function() {
            const groupId = this.value;
            
            // Reset the category select
            categoryFilter.innerHTML = '<option value="">All Categories</option>';
            
            if (!groupId) {
                categoryFilter.disabled = true;
                return;
            }
            
            // Enable the category dropdown
            categoryFilter.disabled = false;
            
            // Fetch categories for the selected group
            fetch(`/forum/api/categories/${groupId}`)
                .then(response => response.json())
                .then(categories => {
                    categories.forEach(category => {
                        const option = document.createElement('option');
                        option.value = category.id;
                        option.textContent = category.category;
                        categoryFilter.appendChild(option);
                    });
                })
                .catch(error => {
                    console.error('Error fetching categories:', error);
                });
        });
    }
});
</script>
{% endblock %}
