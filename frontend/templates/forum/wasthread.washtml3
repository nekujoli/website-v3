{% extends "base.html" %}
{% block title %}{{ thread.title }}{% endblock %}

{% block content %}
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="{{ url_for('forum.view_threads') }}">Forum</a></li>
            {% if thread.group_name %}
            <li class="breadcrumb-item"><a href="#">{{ thread.group_name }}</a></li>
            {% endif %}
            {% if thread.category_name %}
            <li class="breadcrumb-item"><a href="#">{{ thread.category_name }}</a></li>
            {% endif %}
            <li class="breadcrumb-item active">{{ thread.title }}</li>
        </ol>
    </nav>

    <div class="card mb-4">
        <div class="card-header">
            <div class="d-flex justify-content-between align-items-center mb-2">
                <h1 class="h3 mb-0">{{ thread.title }}</h1>
                {% if thread.group_name and thread.category_name %}
                <div class="thread-metadata">
                    <span class="badge bg-primary me-2">{{ thread.group_name }}</span>
                    <span class="badge bg-secondary">{{ thread.category_name }}</span>
                </div>
                {% endif %}
            </div>
            
            {% if thread_users %}
            <div class="thread-users mt-2">
                <small class="text-muted me-2">Visible to:</small>
                <div class="d-inline-flex flex-wrap gap-1 align-items-center">
                    {% for user in thread_users %}
                    <div class="badge bg-light text-dark">
                        {{ user.username }}
                        {% if is_moderator or thread.created_by == session.get('user_id') %}
                        <form method="POST" action="{{ url_for('forum.remove_thread_user', thread_id=thread.id, remove_user_id=user.id) }}" class="d-inline">
                            <input type="hidden" name="csrf_token" value="{{ csrf_token() }}">
                            <button type="submit" class="btn-close btn-close-white btn-sm ms-1" aria-label="Remove user" 
                                    style="font-size: 0.5rem;"
                                    onclick="return confirm('Remove {{ user.username }} from this thread?');"></button>
                        </form>
                        {% endif %}
                    </div>
                    {% endfor %}
                    
                    {% if is_moderator or thread.created_by == session.get('user_id') %}
                    <button type="button" class="badge bg-success border-0" data-bs-toggle="modal" data-bs-target="#addUserModal">
                        + Add User
                    </button>
                    {% endif %}
                </div>
            </div>
            {% endif %}
            
            {% if is_report_thread and is_moderator %}
            <div class="mt-2">
                <form method="POST" action="{{ url_for('forum.add_reporter_to_thread', thread_id=thread.id) }}" class="d-inline me-2">
                    <input type="hidden" name="csrf_token" value="{{ csrf_token() }}">
                    <button type="submit" class="btn btn-sm btn-outline-secondary">Add Reporter to Discussion</button>
                </form>
                
                {% if reported_post_id %}
                <form method="POST" action="{{ url_for('forum.add_author_to_thread', thread_id=thread.id) }}" class="d-inline me-2">
                    <input type="hidden" name="csrf_token" value="{{ csrf_token() }}">
                    <input type="hidden" name="reported_post_id" value="{{ reported_post_id }}">
                    <button type="submit" class="btn btn-sm btn-outline-secondary">Add Post Author to Discussion</button>
                </form>
                
                <form method="POST" action="{{ url_for('forum.restrict_post', post_id=reported_post_id) }}" class="d-inline me-2">
                    <input type="hidden" name="csrf_token" value="{{ csrf_token() }}">
                    <input type="hidden" name="report_thread_id" value="{{ thread.id }}">
                    <button type="submit" class="btn btn-sm btn-warning">Restrict Post Visibility</button>
                </form>
                
                <form method="POST" action="{{ url_for('forum.unrestrict_post', post_id=reported_post_id) }}" class="d-inline">
                    <input type="hidden" name="csrf_token" value="{{ csrf_token() }}">
                    <input type="hidden" name="report_thread_id" value="{{ thread.id }}">
                    <button type="submit" class="btn btn-sm btn-success">Restore Post Visibility</button>
                </form>
                {% endif %}
            </div>
            {% endif %}
        </div>
    </div>

    <div class="post-list">
        {% for post in posts %}
            <div class="post-item card mb-4" id="post-{{ post.id }}" data-post-id="{{ post.id }}">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <div>
                        <strong>{{ post.username }}</strong>
                        <small class="text-muted">{{ post.created_at | datetime }}</small>
                        {% if post.is_restricted > 0 %}
                        <span class="badge bg-warning ms-2">Restricted Visibility</span>
                        {% endif %}
                    </div>
                    <div class="btn-group">
                        {% if session.get('user_id') == post.created_by or is_moderator %}
                            <a href="{{ url_for('forum.edit_post', post_id=post.id) }}" 
                               class="btn btn-sm btn-outline-secondary">Edit</a>
                            {% if post.edit_count %}
                                <a href="{{ url_for('forum.post_history', post_id=post.id) }}"
                                   class="btn btn-sm btn-outline-secondary">History ({{ post.edit_count }})</a>
                            {% endif %}
                        {% endif %}
                        {% if session.get('user_id') and session.get('user_id') != post.created_by %}
                            <button type="button" 
                                   class="btn btn-sm btn-outline-danger" 
                                   data-bs-toggle="modal" 
                                   data-bs-target="#reportModal{{ post.id }}">
                                Report
                            </button>
                        {% endif %}
                    </div>
                </div>
                <div class="card-body content">
                    {{ post.rendered_content|safe }}
                    
                    {% if post.is_restricted > 0 and post.restricted_users and (is_moderator or thread.created_by == session.get('user_id')) %}
                    <div class="mt-3 p-2 bg-light rounded">
                        <small class="d-block mb-1"><strong>Restricted to:</strong></small>
                        <div class="d-flex flex-wrap gap-1">
                            {% for user in post.restricted_users %}
                            <span class="badge bg-secondary">{{ user.username }}</span>
                            {% endfor %}
                        </div>
                    </div>
                    {% endif %}
                </div>
            </div>
            
            <!-- Report Modal for Post -->
            {% if session.get('user_id') and session.get('user_id') != post.created_by %}
            <div class="modal fade" id="reportModal{{ post.id }}" tabindex="-1" aria-labelledby="reportModalLabel{{ post.id }}" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <form method="POST" action="{{ url_for('forum.report_post', post_id=post.id) }}">
                            <input type="hidden" name="csrf_token" value="{{ csrf_token() }}">
                            <div class="modal-header">
                                <h5 class="modal-title" id="reportModalLabel{{ post.id }}">Report Post</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <p>Are you sure you want to report this post?</p>
                                <div class="mb-3">
                                    <label for="reason{{ post.id }}" class="form-label">Reason for reporting:</label>
                                    <textarea id="reason{{ post.id }}" name="reason" class="form-control" rows="3" placeholder="Please explain why you are reporting this post"></textarea>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="submit" class="btn btn-danger">Report Post</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            {% endif %}
        {% endfor %}
    </div>

    {% if session.get('user') %}
        <form method="POST" action="{{ url_for('forum.new_post', thread_id=thread.id) }}" class="mt-4">
            <input type="hidden" name="csrf_token" value="{{ csrf_token() }}">
            <div class="form-group">
                <label for="content">Reply:</label>
                <textarea id="content" name="content" class="form-control" rows="5" required></textarea>
            </div>
            <button type="submit" class="btn btn-primary mt-2">Post Reply</button>
        </form>
    {% else %}
        <div class="alert alert-info">
            Please <a href="{{ url_for('auth.login') }}">log in</a> to reply.
        </div>
    {% endif %}
    
    <!-- Add User Modal -->
    {% if is_moderator or thread.created_by == session.get('user_id') %}
    <div class="modal fade" id="addUserModal" tabindex="-1" aria-labelledby="addUserModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form method="POST" action="{{ url_for('forum.add_thread_user', thread_id=thread.id) }}">
                    <input type="hidden" name="csrf_token" value="{{ csrf_token() }}">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addUserModalLabel">Add User to Thread</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="userSearch" class="form-label">Search for user:</label>
                            <input type="text" id="userSearch" class="form-control" 
                                   placeholder="Type to search users..." autocomplete="off">
                            <div id="userResults" class="list-group mt-2"></div>
                            <input type="hidden" id="user_id" name="user_id" required>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary" id="addUserBtn" disabled>Add User</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    {% endif %}
{% endblock %}

{% block scripts %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    const textarea = document.getElementById('content');
    if (textarea) {
        textarea.addEventListener('paste', async function(e) {
            const items = (e.clipboardData || e.originalEvent.clipboardData).items;
            
            for (let item of items) {
                if (item.type.indexOf('image') === 0) {
                    e.preventDefault();
                    
                    const blob = item.getAsFile();
                    const reader = new FileReader();
                    
                    reader.onload = function(event) {
                        const img_data = event.target.result;
                        const cursor = this.selectionStart;
                        const text = this.value;
                        
                        this.value = text.substring(0, cursor) + 
                            `![Pasted image](${img_data})` +
                            text.substring(cursor);
                    }.bind(this);
                    
                    reader.readAsDataURL(blob);
                }
            }
        });
    }
    
    // User search for Add User modal
    const userSearch = document.getElementById('userSearch');
    const userResults = document.getElementById('userResults');
    const userIdInput = document.getElementById('user_id');
    const addUserBtn = document.getElementById('addUserBtn');
    
    if (userSearch) {
        userSearch.addEventListener('input', function() {
            const query = this.value.trim();
            
            if (query.length < 2) {
                userResults.innerHTML = '';
                return;
            }
            
            fetch(`/forum/api/search_users?q=${encodeURIComponent(query)}`)
                .then(response => response.json())
                .then(users => {
                    userResults.innerHTML = '';
                    
                    if (users.length === 0) {
                        userResults.innerHTML = '<div class="list-group-item">No users found</div>';
                        return;
                    }
                    
                    users.forEach(user => {
                        const item = document.createElement('button');
                        item.type = 'button';
                        item.className = 'list-group-item list-group-item-action';
                        item.textContent = user.username;
                        item.addEventListener('click', function() {
                            userSearch.value = user.username;
                            userIdInput.value = user.id;
                            userResults.innerHTML = '';
                            addUserBtn.disabled = false;
                        });
                        userResults.appendChild(item);
                    });
                })
                .catch(error => {
                    console.error('Error searching users:', error);
                    userResults.innerHTML = '<div class="list-group-item text-danger">Error searching users</div>';
                });
        });
    }
});
</script>
{% endblock %}
